{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","props","todo","selectedTodoId","selectedTodo","selectedUserId","className","map","id","userId","completed","title","classNames","type","onClick","TodoFilter","setFilteredBy","setQuery","filteredBy","query","value","onChange","event","target","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","getTodos","getUser","TodoModal","useState","user","setUser","todos","setTodos","useEffect","loadData","a","all","userFromServer","todosFromServer","selectedTodos","filter","hadlerModalClose","href","name","App","setSelectedUserId","setSelectedTodo","isLoading","setIsLoading","getTodosFromServer","receivedTodos","filteredTodos","filterType","toLocaleLowerCase","includes","getFilteredTodo","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.50f410dd.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport React from 'react';\nimport { Todo } from '../../types/Todo';\n\ninterface Props {\n  todo: Todo[],\n  selectedTodoId: number,\n  selectedTodo: (value: number) => void,\n  selectedUserId: (value: number) => void,\n}\n\nexport const TodoList: React.FC<Props> = (props) => {\n  const {\n    todo, selectedTodoId, selectedTodo, selectedUserId,\n  } = props;\n\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n      <tbody>\n        {todo.map(({\n          id, userId, completed, title,\n        }) => (\n          <tr\n            data-cy=\"todo\"\n            className=\"\"\n            key={id}\n          >\n            <td className=\"is-vcentered\">{id}</td>\n            <td className=\"is-vcentered\">\n              {completed && (\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              )}\n            </td>\n            <td className={classNames('is-vcentered',\n              {\n                'is-expanded': !completed,\n              })}\n            >\n              <p className={\n                !completed\n                  ? 'has-text-danger'\n                  : 'has-text-success'\n              }\n              >\n                {title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              {selectedTodoId === id\n                ? (\n                  <button\n                    data-cy=\"selectButton\"\n                    className=\"button\"\n                    type=\"button\"\n                    onClick={() => {\n                      selectedTodo(0);\n                      selectedUserId(0);\n                    }}\n                  >\n                    <span className=\"icon\">\n                      <i className=\"far fa-eye-slash\" />\n                    </span>\n                  </button>\n                )\n                : (\n                  <button\n                    data-cy=\"selectButton\"\n                    className=\"button\"\n                    type=\"button\"\n                    onClick={() => {\n                      selectedTodo(id);\n                      selectedUserId(userId);\n                    }}\n                  >\n                    <span className=\"icon\">\n                      <i className=\"far fa-eye\" />\n                    </span>\n                  </button>\n                )}\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","type Props = {\n  setFilteredBy: (value: string) => void;\n  setQuery: (value: string) => void;\n  filteredBy: string,\n  query: string;\n};\nexport const TodoFilter: React.FC<Props> = (props) => {\n  const {\n    setFilteredBy, setQuery, filteredBy, query,\n  } = props;\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={filteredBy}\n            onChange={(event) => setFilteredBy(event.target.value)}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={(event) => setQuery(event.target.value)}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {query && (\n            // eslint-disable-next-line jsx-a11y/control-has-associated-label\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => setQuery('')}\n            />\n          )}\n        </span>\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { getTodos, getUser } from '../../api';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\n\ntype Props = {\n  userId: number;\n  selectedTodoId: number;\n  selectedTodo: (value: number) => void,\n  selectedUserId: (value: number) => void,\n};\n\nexport const TodoModal: React.FC<Props> = (props) => {\n  const [user, setUser] = useState<User>();\n  const [todos, setTodos] = useState<Todo[]>([]);\n\n  const {\n    userId, selectedTodoId, selectedTodo, selectedUserId,\n  } = props;\n\n  useEffect(() => {\n    const loadData = async () => {\n      const [userFromServer, todosFromServer] = await Promise.all([\n        getUser(userId), getTodos()]);\n\n      setUser(userFromServer);\n      setTodos(todosFromServer);\n    };\n\n    loadData();\n  }, [selectedTodoId]);\n\n  const selectedTodos = todos.filter(({ id }) => id === selectedTodoId);\n\n  const hadlerModalClose = () => {\n    selectedTodo(0);\n    selectedUserId(0);\n  };\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!user ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n\n          {selectedTodos.map(({ id, title, completed }) => (\n            <>\n              <header className=\"modal-card-head\">\n                <div\n                  className=\"modal-card-title has-text-weight-medium\"\n                  data-cy=\"modal-header\"\n                >\n                  {`Todo #${id}`}\n                </div>\n\n                {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n                <button\n                  type=\"button\"\n                  className=\"delete\"\n                  data-cy=\"modal-close\"\n                  onClick={hadlerModalClose}\n                />\n              </header>\n              <div className=\"modal-card-body\">\n                <p className=\"block\" data-cy=\"modal-title\">\n                  {title}\n                </p>\n\n                <p className=\"block\" data-cy=\"modal-user\">\n                  {completed === true\n                    ? (<strong className=\"has-text-success\">Done</strong>)\n                    : (<strong className=\"has-text-danger\">Planned</strong>)}\n\n                  {' by '}\n\n                  <a href=\"mailto:Sincere@april.biz\">\n                    {user.name}\n                  </a>\n                </p>\n              </div>\n\n            </>\n\n          ))}\n\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { useState, useEffect } from 'react';\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { Todo } from './types/Todo';\nimport { getTodos } from './api';\n\nexport function getFilteredTodo(\n  todos: Todo[],\n  filterType: string,\n  query: string,\n) {\n  const filterBy = todos.filter((todo) => {\n    switch (filterType) {\n      case 'completed':\n        return todo.completed;\n\n      case 'active':\n        return !todo.completed;\n\n      default:\n        return todo;\n    }\n  });\n\n  return filterBy.filter(({ title }) => (\n    title.toLocaleLowerCase().includes(query.toLocaleLowerCase())\n  ));\n}\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [selectedUserId, setSelectedUserId] = useState(0);\n  const [selectedTodo, setSelectedTodo] = useState(0);\n  const [isLoading, setIsLoading] = useState(true);\n  const [filteredBy, setFilteredBy] = useState('all');\n  const [query, setQuery] = useState('');\n\n  useEffect(() => {\n    const getTodosFromServer = async () => {\n      const receivedTodos = await getTodos();\n\n      setTodos(receivedTodos);\n      setIsLoading(false);\n    };\n\n    getTodosFromServer();\n  }, []);\n\n  const filteredTodos = getFilteredTodo(todos, filteredBy, query);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\" />\n            <TodoFilter\n              setFilteredBy={setFilteredBy}\n              setQuery={setQuery}\n              filteredBy={filteredBy}\n              query={query}\n            />\n          </div>\n\n          <div className=\"block\">\n            { isLoading\n              ? <Loader />\n              : (\n                <TodoList\n                  todo={filteredTodos}\n                  selectedTodoId={selectedTodo}\n                  selectedTodo={setSelectedTodo}\n                  selectedUserId={setSelectedUserId}\n                />\n              )}\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo\n        && (\n          <TodoModal\n            userId={selectedUserId}\n            selectedTodoId={selectedTodo}\n            selectedTodo={setSelectedTodo}\n            selectedUserId={setSelectedUserId}\n          />\n        )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}